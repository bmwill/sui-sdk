searchState.loadedDescShard("sui_sdk", 0, "Retrieve result and consume hasher instance.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAddress Owned\nAn argument to a programmable transaction command\nArity mismatch for Move function. The number of arguments …\nCancelled transaction version assignment.\nCertificate is on the deny list\nA system transaction that will update epoch information …\nA G1 point in BN254 serialized as a vector of three …\nA G2 point in BN254 serialized as a vector of three …\nCircular Object Ownership\nA claim consists of value and index_mod_4.\nCoin balance overflowed an u64\nA single command in a programmable transaction.\nInvalid command argument\nOnly commit_timestamp_ms is passed to the move call …\nA type provided did not match the specified constraint\nA representation of a 32 byte digest\nDigest in upgrade ticket and computed digest differ\nEffects from the transaction are too large\nEndOfEpochTransaction replaces ChangeEpoch with a list of …\nEndOfEpochTransactionKind\nValidators wont sign a transaction unless the expiration …\nSpecific type of event\nThe old version, digest and owner.\nGas used in the failed case, and the error.\nAttempted to used feature that is not supported yet\nFunction not found\nThe gas coin. The gas coin can only be used by-ref, except …\nSummary of gas charges.\nImmutable\nPackage upgrade is incompatible with previous version\nOut of bounds access to input or results\nOne of the input objects or primitive values (from …\nRequested shared object has been deleted\nInsufficient coin balance for requested operation\nInsufficient Gas\nInvalid argument to private entry function. Private entry …\nThe argument cannot be deserialized into a value of the …\nInvalid usage of Gas coin. The Gas coin can only be used …\nInvalid Gas Object.\nImmutable objects cannot be passed by mutable reference, …\nImmutable objects cannot be passed by-value.\nInvalid public Move function signature. Unsupported return …\nInvalid usage of result. Expected a single result but …\nInvalid Transfer Object, object does not have public …\nThe argument cannot be instantiated from raw bytes\nInvalid usage of move value.\nInvariant Violation\nStruct that contains info for a JWK. A list of them for …\nKey to identify a JWK, consists of iss and kid.\nA structed of parsed JWT details, consists of kid, header, …\nThe length of an bls12381 private key in bytes.\nThe length of an bls12381 public key in bytes.\nThe length of an bls12381 signature key in bytes.\nThe length of an ed25519 private key in bytes.\nThe length of an ed25519 public key in bytes.\nThe length of an ed25519 signature key in bytes.\nThe length of an secp256k1 private key in bytes.\nThe length of an secp256k1 public key in bytes.\nThe length of an secp256k1 signature key in bytes.\nThe length of an secp256r1 private key in bytes.\nThe length of an secp256r1 public key in bytes.\nThe length of an secp256r1 signature key in bytes.\n<code>forall T: Vec&lt;T&gt; -&gt; vector&lt;T&gt;</code> Given n-values of the same …\n<code>(&amp;mut Coin&lt;T&gt;, Vec&lt;Coin&lt;T&gt;&gt;)</code> It merges n-coins into the …\nMove runtime abort\nThe command for calling a Move function, either an entry …\nA call to either an entry or a public Move function\nError from a non-abort instruction. Possible causes: …\nThe struct that contains signatures and public keys …\nDeleted shared objects that appear mutably/owned in the …\nLike a <code>Result</code> but it accesses a nested result. Currently, …\nNon Entry Function Invoked. Move Call must start with an …\nThe transaction has no expiration\nObject is not a package\nSame definition as in ObjectIn.\nObject Owned\nIf an object exists (at root-level) in the store prior to …\nMove object is larger than the maximum allowed size\nType of a Sui object\nAny written object, including all of mutated, created, …\nMap from each module name to raw serialized Move module …\nMove package containing one or more bytecode modules\nPackageId does not matach PackageId in upgrade ticket\nPackage is larger than the maximum allowed size\nInvalid package upgrade\nPackages writes need to be tracked separately with version …\nA series of commands where the results of one command can …\nA transaction that allows the interleaving of native …\nPublishes a Move package. It takes the package bytes and a …\nPublish Error, Non-zero Address. The modules in the …\nPublish or Upgrade dependency downgrade.\nPublish or Upgrade is missing dependency\nDeleted shared objects that appear as read-only in the …\nRead-only shared objects from the input. We don’t really …\nThe result of another command (from <code>ProgrammableTransaction</code>…\nOut of bounds access to subresult\nShared Object\nThe requested shared object operation is not allowed\nShared object operations such a wrapping, freezing, or …\n<code>(&amp;mut Coin&lt;T&gt;, Vec&lt;u64&gt;)</code> -&gt; <code>Vec&lt;Coin&lt;T&gt;&gt;</code> It splits off …\nAn object whose governing logic lives in a published Move …\nA Move struct of the given type\nSui Move Bytecode Verification Error.\nSui Move Bytecode verification timed out.\nThe response from processing a transaction or a certified …\nThe response from processing a transaction or a certified …\nThe response from processing a transaction or a certified …\n<code>(Vec&lt;forall T:key+store. T&gt;, address)</code> It sends n-objects …\nType argument error\nType arity mismatch for Move function. Mismatch between …\nThe type of the value does not match the expected type\nA type was not found in the module specified\nIdentifies a struct and the module it was defined in\nUnable to fetch package\nUpgrade policy is not valid\nUnused result without the drop ability.\nUpgrades a Move package Takes (in order):\nUpgraded package info for the linkage table\nMoveVm invariant violation\nBytecode verification error.\nIndicates the transaction tried to write objects too large …\nAn zk login authenticator with all the necessary fields.\nAll inputs required for the zk login proof verification …\nThe struct for zk login proof.\nA wrapper struct to retrofit in [enum PublicKey] for …\nOwner of the balance change\nAlgorithm parameter, …\nThe amount indicate the balance value changes.\nThe arguments to the function.\nThe initial version of the authenticator object that it …\nThe initial version of the authenticator object that it …\nAuxiliary data that are not protocol-critical, generated …\nObjects whose state are changed in the object store.\nCommitments to checkpoint-specific state (e.g. txns in …\nType of the Coin\nThe commands to be executed sequentially. A failure in any …\nUnix timestamp from consensus\nUnix timestamp from consensus\nUnix timestamp from consensus\nThe total amount of gas charged for computation during the …\nCost of computation/execution\nDigest of consensus output\nDigest of consensus output\nStores consensus handler determined shared object version …\nThe set of transaction digests this transaction depends on.\nDerive an ObjectId for a Dynamic Child Object.\nCreate an ObjectId from <code>TransactionDigest</code> and <code>count</code>.\nRSA public exponent, …\nThe effects produced by executing this transaction\nPresent only on the final checkpoint of the epoch.\nThe epoch when this transaction was executed.\nEpoch of the randomness state update transaction\nEpoch of the authenticator state update transaction\nEpoch of the commit prologue transaction\nEpoch of the commit prologue transaction\nEpoch of the commit prologue transaction\nThe next (to become) epoch ID.\nCommitments to epoch specific state (e.g. live object set)\nThe running total gas costs of all transactions included …\nUnix timestamp when epoch started\nThe events, if any, emitted by this transaciton during …\nThe digest of the events emitted during execution, can be …\nRust definitions of move/sui framework types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe function to be called.\nThe updated gas object reference, as an index into the …\nWhether this object ID is created or deleted in this …\nThe state of all inputs to this transaction as they were …\nState of the object in the store prior to this transaction.\nInput objects or primitive values\nIndex into the code stream for a jump. The offset is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the underlying byte array of a Address.\nReturn the underlying byte array of an Bls12381PublicKey.\nReturn the underlying byte array of an Bls12381Signature.\nReturn the underlying byte array of an Ed25519PublicKey.\nReturn the underlying byte array of an Ed25519Signature.\nReturn the underlying byte array of an Secp256k1PublicKey.\nReturn the underlying byte array of an Secp256k1Signature.\nReturn the underlying byte array of an Secp256r1PublicKey.\nReturn the underlying byte array of an Secp256r1Signature.\nReturn the underlying byte array of an ObjectId\nChecks if this is a Coin type\niss string that identifies the OIDC provider.\nkid string that identifies the JWK.\nKey type parameter, …\nThe version number of all the written Move objects by this …\nexpire JWKs that have a lower epoch than this\nThe specific module in the package containing the function.\nRSA modulus, …\nGet net gas usage, positive number means used gas; …\nTotal number of transactions committed since genesis, …\nnewly active jwks\nnext_epoch_committee is <code>Some</code> if and only if the current …\nThe protocol version that is in effect during the epoch …\nThe fee for the rebate. The portion of the storage rebate …\nThe non-refundable storage fee.\nThe state of all output objects created or mutated by this …\nState of the object in the store after this transaction.\nThe package containing the module and function.\nThe protocol version in effect in the new epoch.\nUpdated random bytes\nThe initial version of the randomness object that it was …\nRandomness round of the update\nConsensus round of the authenticator state update\nConsensus round of the commit\nConsensus round of the commit\nConsensus round of the commit\nThe status of the execution\nThe total amount of gas charged for storage during the …\nStorage cost, it’s the sum of all storage cost for all …\nThe amount of storage cost refunded to the user for all …\nThe amount of storage rebate refunded to the txn senders.\nThe sub DAG index of the consensus commit. This field will …\nSystem packages (specifically framework and move stdlib) …\nTimestamp of the checkpoint - number of milliseconds from …\nDerive an Address from a MultisigCommittee. A MultiSig …\nDefine as iss_bytes_len || iss_bytes || …\nDefine as iss_bytes_len || iss_bytes || …\nThe input Transaction\nThe transaction digest\nThe type arguments to the function.\nShared objects that are not mutated in this transaction. …\nId of the upgraded packages\nVersion of the upgraded package\nCheckpointSummary is not an evolvable structure - it must …\nWhich command the error occurred\nThe error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")